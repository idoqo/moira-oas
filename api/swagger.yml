{
  "openapi": "3.0.0",
  "info": {
    "description": "This is an API description for Moira Alert project. Please check https://github.com/moira-alert",
    "version": "2.5.1.47",
    "title": "Moira Alert",
    "license": {
      "name": "MIT"
    }
  },
  "tags": [
    {
      "name": "config",
      "description": "Runtime configuration of the API"
    },
    {
      "name": "triggers",
      "description": "Triggers Collection Methods"
    },
    {
      "name": "trigger",
      "description": "One Trigger Methods"
    }
  ],
  "servers": [
    {
      "url": "http://localhost:8080/api",
      "description": "Localhost server"
    }
  ],
  "paths": {
    "/config": {
      "get": {
        "summary": "Get available configuration",
        "tags": [
          "config"
        ],
        "responses": {
          "200": {
            "description": "Configuration fetched successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "remoteAllowed": {
                      "type": "boolean",
                      "description": "Flag for determining if Moira is accessible remotely.",
                      "example": false
                    },
                    "contacts": {
                      "type": "array",
                      "description": "List of enabled contact types",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The type of contact",
                            "example": "telegram"
                          },
                          "label": {
                            "type": "string",
                            "description": "Human readable label of the contact",
                            "example": "Telegram"
                          },
                          "help": {
                            "type": "string",
                            "description": "Help text relevant to the contact type",
                            "example": "@MoiraBot requires admin privileges on your target channel."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/trigger": {
      "put": {
        "summary": "Create new trigger",
        "tags": [
          "triggers"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "properties": {
                  "desc": {
                    "type": "string",
                    "description": "Trigger description",
                    "example": "Dice roll trigger"
                  },
                  "error_value": {
                    "type": "number",
                    "description": "Target value at which error will be fired",
                    "example": 7
                  },
                  "expression": {
                    "type": "string",
                    "description": "Expression that will be evaluated",
                    "example": "t1 > 6 ? ERROR : (t1 > 4)? WARN : OK"
                  },
                  "id": {
                    "type": "string"
                  },
                  "is_remote": {
                    "type": "boolean",
                    "description": "Which storage to use local or remote",
                    "example": false
                  },
                  "mute_new_metrics": {
                    "type": "boolean",
                    "example": true
                  },
                  "name": {
                    "type": "string",
                    "description": "Trigger name",
                    "example": "Dice Roll"
                  },
                  "patterns": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "example": [
                      "local.dice.roll"
                    ],
                    "description": "Array of possible patterns to check values in simple mode"
                  },
                  "sched": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "properties": {
                      "days": {
                        "items": {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "properties": {
                            "enabled": {
                              "type": "boolean"
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "endOffset": {
                        "type": "integer"
                      },
                      "startOffset": {
                        "type": "integer"
                      },
                      "tzOffset": {
                        "type": "integer"
                      }
                    },
                    "additionalProperties": false,
                    "type": "object"
                  },
                  "tags": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "description": "Array of tags associated with this trigger",
                    "example": [
                      "test"
                    ]
                  },
                  "targets": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "description": "Array of targets associated with this trigger"
                  },
                  "throttling": {
                    "type": "integer",
                    "description": "Quantity of events before throttling will be enabled"
                  },
                  "trigger_type": {
                    "type": "string",
                    "enum": [
                      "rising",
                      "falling",
                      "expression"
                    ]
                  },
                  "ttl": {
                    "type": "integer"
                  },
                  "ttl_state": {
                    "type": "string"
                  },
                  "warn_value": {
                    "type": "number",
                    "description": "Target value at which warning will be fired",
                    "example": 5
                  },
                  "alone_metrics": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "An array of targets which have only one metric",
                    "example": [
                      "t1",
                      "t2"
                    ]
                  }
                },
                "additionalProperties": false,
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Trigger created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "trigger_id"
                    },
                    "message": {
                      "type": "string",
                      "example": "trigger created"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Invalid request"
                    },
                    "error": {
                      "type": "string",
                      "example": "error_value is equal to warn_value, please set exactly one value"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/trigger/{triggerId}": {
      "put": {
        "summary": "Update existing trigger",
        "tags": [
          "trigger"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "triggerID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The ID of updated trigger",
            "example": "5A8AF369-86D2-44DD-B514-D47995ED6AF7"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "properties": {
                  "$ref": "#/paths/~1trigger/put/requestBody/content/application~1json/schema/properties"
                },
                "additionalProperties": false,
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Trigger updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "trigger_id"
                    },
                    "message": {
                      "type": "string",
                      "example": "trigger created"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Invalid request"
                    },
                    "error": {
                      "type": "string",
                      "example": "error_value is equal to warn_value, please set exactly one value"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Update existing trigger",
        "tags": [
          "trigger"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1trigger~1%7BtriggerId%7D/put/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Trigger data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "$ref": "#/paths/~1trigger/put/requestBody/content/application~1json/schema/properties"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Trigger not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Resource not found"
                    },
                    "error": {
                      "type": "string",
                      "example": "trigger not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/trigger/{triggerId}/render": {
      "get": {
        "summary": "Get rendered plot for trigger",
        "tags": [
          "trigger"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1trigger~1%7BtriggerId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "targetID",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The ID of updated target to print plot for",
            "example": "t1"
          },
          {
            "in": "query",
            "name": "from",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The start period of metrics to get",
            "example": "-1hour"
          },
          {
            "in": "query",
            "name": "to",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The end period of metrics to get",
            "example": "now"
          }
        ],
        "responses": {
          "200": {
            "description": "Plot for trigger",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Internal Server Error"
                    },
                    "error": {
                      "type": "string",
                      "example": "no points found to render trigger: 5A8AF369-86D2-44DD-B514-D47995ED6AF7"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/trigger/{triggerId}/metrics": {
      "get": {
        "summary": "Get metrics associated with certain trigger",
        "tags": [
          "trigger"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1trigger~1%7BtriggerId%7D/put/parameters/0"
          },
          {
            "$ref": "#/paths/~1trigger~1%7BtriggerId%7D~1render/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1trigger~1%7BtriggerId%7D~1render/get/parameters/3"
          }
        ],
        "responses": {
          "200": {
            "description": "Metrics for trigger",
            "content": {
              "application/json": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "step": {
                        "type": "integer"
                      },
                      "ts": {
                        "type": "integer"
                      },
                      "value": {
                        "type": "number"
                      }
                    },
                    "additionalProperties": false,
                    "type": "object"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Internal Server Error"
                    },
                    "error": {
                      "type": "string",
                      "example": "no points found to render trigger: 5A8AF369-86D2-44DD-B514-D47995ED6AF7"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
